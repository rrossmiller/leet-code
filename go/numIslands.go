package main

import "fmt"

func main() {
	// 	grid := [][]byte{
	// 		{'1', '1', '1', '1', '0'},
	// 		{'1', '1', '0', '1', '0'},
	// 		{'1', '1', '0', '0', '0'},
	// 		{'0', '0', '0', '0', '0'},
	// 	}
	// 	ans := numIslands(grid)
	// 	fmt.Println(ans, 1)
	//
	// 	grid = [][]byte{
	// 		{'1', '1', '1', '1', '0'},
	// 		{'1', '1', '0', '1', '0'},
	// 		{'1', '1', '0', '0', '0'},
	// 		{'0', '0', '0', '1', '1'},
	// 	}
	// 	ans = numIslands(grid)
	// 	fmt.Println(ans, 2)
	//
	// 	grid = [][]byte{
	// 		{'1', '1', '0', '0', '0'},
	// 		{'1', '1', '0', '0', '0'},
	// 		{'0', '0', '1', '0', '0'},
	// 		{'0', '0', '0', '1', '1'}}
	// 	ans = numIslands(grid)
	// 	fmt.Println(ans, 3)
	// 	grid = [][]byte{
	// 		{'1', '1', '1'},
	// 		{'0', '1', '0'},
	// 		{'1', '1', '1'},
	// 	}
	// 	ans = numIslands(grid)
	// 	fmt.Println(ans, 1)

	grid := [][]byte{{'1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '0', '1', '1'}, {'0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '0'}, {'1', '0', '1', '1', '1', '0', '0', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '0', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '0', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1'}, {'0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '0', '1', '1', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1'}, {'1', '0', '1', '1', '1', '1', '1', '0', '1', '1', '1', '0', '1', '1', '1', '1', '0', '1', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '1', '1', '0'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '1', '1', '1', '1', '0', '0'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}, {'1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1'}}
	ans := numIslands(grid)
	fmt.Println(ans, 1)
}

func numIslands(grid [][]byte) int {
	n := 0
	for i := 0; i < len(grid); i++ {
		for j := 0; j < len(grid[i]); j++ {
			if grid[i][j] == '1' {
				n++
				visitBFS(i, j, grid)
			}
		}
	}
	return n
}

func visitBFS(r, c int, grid [][]byte) {
	q := [][2]int{{r, c}}
	grid[r][c] = '.'
	dirs := [4][2]int{
		{1, 0},
		{-1, 0},
		{0, 1},
		{0, -1},
	}

	for len(q) > 0 {
		r, c := q[0][0], q[0][1]
        q=q[1:]
		for _, d := range dirs {
			x := r + d[0]
			y := c + d[1]

			if x >= 0 && x < len(grid) && y >= 0 && y < len(grid[x]) && grid[x][y] == '1' {
				q = append(q, [2]int{x, y})
				grid[x][y] = '.'
			}
		}
	}
}
